A test project aimed at benchmarking mobile applications with OpenLayers


A patch targeted at OpenLayers trunk is provided in this directory to prevent animated panning (which slows down everything).

Here are the steps for building OpenLayers :

cd mobile-bench-app
svn co http://svn.openlayers.org/trunk/openlayers/
cd openlayers && patch -p0 < panpanel.animate.patch && cd ..
cp mobile.cfg openlayers/build
cd openlayers/build && python build.py mobile.cfg
 
This OpenLayers build is then "Closure Compiled" using "Simple" optimizations (with the help of http://closure-compiler.appspot.com/home). 
The resulting build is called OpenLayers.cc.js
Here are the figures :
Original Size:  126.57KB (31.94KB gzipped)
Compiled Size:  96.94KB (25.87KB gzipped)
Saved 23.41% off the original size (19.02% off the gzipped size)


Then, I tried with "Advanced optimizations". 
As said in http://code.google.com/intl/fr-FR/closure/compiler/docs/api-tutorial3.html#removal we need to export functions which are to be used.

The best way to do this is to ship the app code with the library code.
The resulting file is OpenLayers.cc.adv.js, and here are the figures :

Original Size:	127.35KB (32.41KB gzipped)
Compiled Size:	59.16KB (20.46KB gzipped)
Saved 53.55% off the original size (36.88% off the gzipped size)

Unfortunately, the build is not functional : I get a "this.l is undefined" error at L115.

The conclusion is that, for the moment, simple optimizations is the easiest and safest way to reduce the build size.
